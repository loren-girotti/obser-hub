#EJERCICIO 1
#a)
x <- c(1,3,5,7,9)
#b)
Y <- 4*x
#c)
Ymax<-max(Y)
#d)
x_ord<-sort(x,descending=TRUE)
#d)
x_ord<-sort(x,descending="TRUE")
#d)
sort(x,decreasing = TRUE)
#d)
x_ord<-sort(x,decreasing = TRUE)
#Otra forma
x <- seq(from = 1,to = 10, by = 2)
#EJERCICIO 1
#a)
#x <- c(1,3,5,7,9)
#Otra forma
x <- seq(from = 1,to = 10, by = 2)
fib <- c()
fib[1]
fib[1]<-1
class(fib)
is.vector(fib)
while(length(fib)<=4){
for(i in fib){
fib[i+2]<-fib[i+1]+fib[i]
}
}
fib<-c(1,1,2,3)
fib3<-fib[3]
#b)
class(fib[3])
#c)
fib<-c(1,1,2,3,"Lorenzo")
class(fib[3])
#d)
class(fib[3])
#e)
fib<-as.numeric(fib)
fib
vec<-seq(from =6, to =99, by=3)
long_vec<-length(vec)
class(long_vec)
which(vec==39)
which(vec==52)
oni_max<-c(1.3,0.7,0.9,1.6,2.6,0.9,2.0)
#---------------------------------------
# EJERCICIO 4
enso_xxi<-c(2002,2004,2006,2009,2014,2018,2023)
rm(list = ls())
nso_xxi<-c(2002,2004,2006,2009,2014,2018,2023)
oni_max<-c(1.3,0.7,0.9,1.6,2.6,0.9,2.0
rm(list = ls())
rm(list = ls())
enso_xxi<-c(2002,2004,2006,2009,2014,2018,2023)
oni_max<-c(1.3,0.7,0.9,1.6,2.6,0.9,2.0)
#---------------------------------------
# EJERCICIO 4
#a)
enso_xxi<-c(2002,2004,2006,2009,2014,2018,2023)
#b) Considero Niño debil 0.5 a 0.9 de anom SST
#   Niño Moderado 1.0 a 1.4 de anom SST
#   Niño Fuerte entre 1.5 y 1.9 de SST
#   Niño Muy Fuerte de +2.0 de SST.
max_oni("Moderado","Débil","Débil","Fuerte","Muy Fuerte","Débil","Muy Fuerte")
#b) Considero Niño debil 0.5 a 0.9 de anom SST
#   Niño Moderado 1.0 a 1.4 de anom SST
#   Niño Fuerte entre 1.5 y 1.9 de SST
#   Niño Muy Fuerte de +2.0 de SST.
max_oni<-c("Moderado","Débil","Débil","Fuerte","Muy Fuerte","Débil","Muy Fuerte")
#c)
names(enso_xxi)<-max_oni
enso_xxi
length(max_oni)
length(enso_xxi)
#d)
factor(max_oni)
#d)
factor(max_oni, levels = "Débil", "Moderado", "Fuerte", "Muy Fuerte")
#d)
factor(max_oni, levels = c("Débil", "Moderado", "Fuerte", "Muy Fuerte"))
#----------------------------------------
# EJERCICIO 5
A <- matrix(data=1:8, nrows =2, ncols=4, byrow = TRUE)
#----------------------------------------
# EJERCICIO 5
A <- matrix(data=1:8, nrow =2, ncol=4, byrow = TRUE)
A
A[2,3]
A[2,]
A[,]
A[,3]
A[2,3]
#c)
for(i in A){
for(j in A){
A[i,j]<-A[j,i]
}
}
for(i in A){
for(j in A){
A[i,j]<-A[j,i]
}
}
#c)
At <- matrix(data=1:8, nrow =2, ncol=4, byrow = FALSE)
At
#c)
At <- matrix(data=1:8, nrow =4, ncol=2, byrow = FALSE)
At
#c)
At <- t(A)
print(At)
At[1,]
names(At[1,])<-c("Primero","Segundo")
At[1,]
rownames(At)<-c("Primera","Segunda","Tercera","Cuarta","Quinta")
rownames(At)<-c("Primera","Segunda","Tercera","Cuarta")
At
#---------------------------------------
# EJERCICIO 6
a <- matrix(data=1:4, nrow=4, ncol=4, byrow = TRUE)
a
det(a)
#b)
det(a)
#c)
producto_matrices<-A*a
#c)
producto_matrices<-A*a
#c)
A*a
A
a
a*A
A*a
#c)
producto_matrices <- A%*%a # El producto matricial se hace con %*%, si hacemos con * hacemos elemento a elemento.
suma_matrices <- A+a
