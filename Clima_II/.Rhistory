5%%4
5/4
7/4
7%%4
4%%2
clear
install.packages(metR)
install.packages("metR")
vec<-c(1,2,3,4,5)
3vec<-3*vec
trivec<-3*vec
y<-85:100:2
y<-85:100:-1
y<-85:100:4
y<-85:100
y2<-double(85:100)
y2<-as.double(y)
class(y)
class(y2)
#----------------------------------------
# EJERCICIO 7
#a)
df <- data.frame(Nombre=c("Lorenzo","Mateo","Narela","Guadalupe","Paola","Gabriel","Matias"),
Apellido=c("Girotti","Rigo","Alvarez","Krivohlavy","Carrillo","Barroso","Lorenzo"),
Edad=c(24,25,27,21,23,27,27,26))
#----------------------------------------
# EJERCICIO 7
#a)
df <- data.frame(Nombre=c("Lorenzo","Mateo","Narela","Guadalupe","Paola","Gabriel","Matias"),
Apellido=c("Girotti","Rigo","Alvarez","Krivohlavy","Carrillo","Barroso","Lorenzo"),
Edad=c(24,25,27,21,23,27,27))
edades<-df[[3]]
edades
df$3
df[$3]
edades<-df$Edad
edades
edades2<-df$Edad
class(edades)
class(edades2)
df$Edad
factor(df$Edad)
#---------------------------------------
# EJERCICIO 8
data("mtcars");mtcars
rm(list = ls())
rm(list = ls())
rm(list = ls())
rm(list=ls())
#---------------------------------------
# EJERCICIO 8
data("mtcars");mtcars
dim(mtcars)
#b)
low_hp<-which(mtcars$hp<100)
#c)
gears<-mtcars[mtcars$gear>=4]
#c)
gears<-mtcars[mtcars$gear>=4]]
#c)
gears<-mtcars[[mtcars$gear>=4]]
#c)
gears<-mtcars[mtcars$gear]
#c)
gears<-mtcars[mtcars$gear>4]
#c)
gears<-mtcars[mtcars$gear >4]
#c)
gears<-mtcars[which(mtcars$gear >=4)]
#c)
gears<-mtcars[which(mtcars$gear>=4)]
#c)
gears<-mtcars[mtcars$gear>=4,]
gears
mean(gears$hp)
hp_prom<-mean(gears$hp)
#---------------------------------------
# EJERCICIO 4
#a)
enso_xxi<-c(2002,2004,2006,2009,2014,2018,2023)
#---------------------------------------
# EJERCICIO 6
#a)
a <- matrix(data=1:4, nrow=4, ncol=4, byrow = TRUE)
#----------------------------------------
# EJERCICIO 7
#a)
df <- data.frame(Nombre=c("Lorenzo","Mateo","Narela","Guadalupe","Paola","Gabriel","Matias"),
Apellido=c("Girotti","Rigo","Alvarez","Krivohlavy","Carrillo","Barroso","Lorenzo"),
Edad=c(24,25,27,21,23,27,27))
#------------------------------------
# EJERCICIO 9
lista<-list(enso_xxi,a,df)
lista
names(lista)<-c("vector","matriz","data frame")
lista
#c)
length(lista[1])
#c)
length(lista$vector)
#c)
length(lista[[1]])
#c)
length(lista$vector)
nrow(lista[[3]])
#c)
length(lista[[1]])
nrow(lista[[3]])
lista$vector[2]<-T
lista$vector
class(lista$vector)
lista$vector[2]<-F
lista$vector[2]<-F;lista$vector
lista$vector[3]<-F;lista$vector
lista$vector[2]<-T # Como segundo elemento aparece el 1, indicando que es verdadero pero mantiene la clase de numeric.
lista$vector[2]<-T # Como segundo elemento aparece el 1, indicando que es verdadero pero mantiene la clase de numeric.
lista$vector[3]<-F;lista$vector
df<- data.frame(Nombre=c('La Quiaca Observatorio', 'Rivadavia', 'Benito Juarez Aero'),
Lat=c(-22.10, -24.19, -37.70),
Lon=c(-65.60, -62.89, -59.79),
H=c(3459, 205, 207))
df
mtcars$wt
mtcars[["wt"],]
mtcars
for(fila in 1:nrow(mtcars)){
peso<-mtcars$wt[fila]*0.453592
}
peso
dim(peso)
vector<- seq(3, 7)
for(k in vector){
print(k*3)
}
print(peso)
peso<-c(peso,mtcars$wt[fila]*0.453592)
print(peso)
peso<-c(peso,mtcars$wt[i]*0.453592)
for(i in mtcars){
peso<-c(peso,mtcars$wt[i]*0.453592)
}
print(peso)
peso<-c()
for(i in mtcars){
peso<-c(peso,mtcars$wt[i]*0.453592)
}
print(peso)
rm(peso)
str(mtcars)
peso <- numeric(nrow(mtcars))
print(peso)
peso[i]<-mtcars$wt*1000*0.453592
print(peso)
peso
peso[i]<-mtcars$wt[i]*1000*0.453592
peso
peso <- numeric(nrow(mtcars))
rm(peso)
peso <- numeric(nrow(mtcars))
for(i in mtcars){
peso[i]<-mtcars$wt[i]*1000*0.453592
}
peso
for(i in 1:nrow(mtcars)){
peso[i]<-mtcars$wt[i]*1000*0.453592
}
peso
rm(peso)
peso <- numeric(nrow(mtcars))
for(i in 1:nrow(mtcars)){
peso[i]<-mtcars$wt[i]*1000*0.453592
}
peso
#b)
sort(peso,decreasing = TRUE)
data<-read.csv(file="./Datos.csv")
data<-read.csv("/Datos.csv")
data<-read.csv("Datos.csv")
data<-read.csv(file="~/obser-hub/Clima_II/tp1/Datos.csv")
data<-read.csv(file="~/obser-hub/Clima_II/tp1/Datos.csv");data
rm(list = ls())
gc()
data<-read.csv(file="~/obser-hub/Clima_II/tp1/Datos.csv");data
#b)
class(data)
class(data[[1]])
class(data[[2]])
class(data[[3]])
class(data[[4]])
View(data)
#-------------------------------------
# EJERCICIO 12
setwd(~/obser-hub/Clima_II)
#-------------------------------------
# EJERCICIO 12
setwd("~/obser-hub/Clima_II")
data<-read.csv(file="./tp1/Datos.csv");data
#c) Conisdero los faltantes de datos de pp
which(is.na(data$PP))
#c) Conisdero los faltantes de datos de pp
data$Estacion[which(is.na(data$PP))]
#c) Conisdero los faltantes de datos de pp
length(which(is.na(data$PP)))
#c) Conisdero los faltantes de datos de pp
which(is.na(data$PP)) #Cantidad de datos faltantes
#c) Conisdero los faltantes de datos de pp
indices_na<-which(is.na(data$PP)) #Cantidad de datos faltantes
#c) Conisdero los faltantes de datos de pp
indices_na<-which(is.na(data$PP) & data$Estacion=="AEROPARQUE AERO") #Obtengo los índices de los datos faltantes
which(is.na(data$PP) & data$Estacion=="AEROPARQUE AERO")
indices_na_mdq<-which(is.na(data$PP) & data$Estacion=="MAR DEL PLATA AERO") #Obtengo los índices de los datos faltantes de MDQ
which(is.na(data$PP) & data$Estacion=="MAR DEL PLATA AERO")
#c) Conisdero los faltantes de datos de pp
indices_na_aero<-which(is.na(data$PP) & data$Estacion=="AEROPARQUE AERO") #Obtengo los índices de los datos faltantes de AEROPARQUE
indices_na_aero
# Si comparamos los índices tenemos
indices_na_mdq
# Obtenemos información sobre las fechas de los datos faltantes
data[indices_na_aero,]
rm(indices_na)
#d)
dias_pp_mdq<-length(which(data$PP>0 & data$Estacion=="MAR DEL PLATA AERO"))
dias_pp_aero<-length(which(data$PP>0 & data$Estacion=="AEROPARQUE"))
dias_pp_aero<-length(which(data$PP>0 & data$Estacion=="AEROPARQUE AERO"))
dias_pp<-c(dias_pp,dias_pp_aero,dias_pp_mdq)
dias_pp<-c(dias_pp_aero,dias_pp_mdq)
names(dias_pp,c("AEROPARQUE AERO","MAR DEL PLATA AERO"))
names(dias_pp=)<-c("AEROPARQUE AERO","MAR DEL PLATA AERO"))
names(dias_pp=)<-c("AEROPARQUE AERO","MAR DEL PLATA AERO")
names(dias_pp)<-c("AEROPARQUE AERO","MAR DEL PLATA AERO")
names(dias_pp)<-c("AEROPARQUE AERO","MAR DEL PLATA AERO");dias_pp
max(dias_pp)
which.max(dias_pp)
which.max(dias_pp);max(dias_pp)
rm(list = ls())
gc()
library(tidyverse)
data('iris');iris
#a)
iris_tb<-as_tibble(iris)
View(iris_tb)
#b)
iris;iris_tb
