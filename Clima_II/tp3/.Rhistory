# Prueba md
#---------------------------------------
# EJERCICIO 11
data("iris");iris
length(iris)
cat1<-rep(0,nrow(iris))
iris$cat1<-rep(0,nrow(iris))
length(iris)
iris
character(cat1)
character(cat1)
for(i in 1:nrow(iris)){
if(iris$Petal.Length[i]>=5){
cat1[i]<-"grande"
}
if(iris$Petal.Length[i]<5){
cat1[i]<-"pequeño"
}
}
cat1
class(cat1)
#b) Podemos utilizar acá el ifelse()
iris$cat2<-ifelse(iris$Petal.Length>=5,"grande","pequeño")
cat2
iris
for(i in 1:nrow(iris)){
if(iris$Petal.Length[i]>=5){
iris$cat1[i]<-"grande"
}
if(iris$Petal.Length[i]<5){
iris$cat1[i]<-"pequeño"
}
}
iris
#-------------------------------------
# EJERCICIO 12
getwd()
pp<-read.csv(file="Datos.csv")
pp<-read.csv(file="/home/loren/obser-hub/Clima_II/tp1/Datos.csv")
pp
View(pp)
View(pp)
which(pp$Nobs!=4)
pp$Nobs[210]
max(pp$Nobs)
min(pp$Nobs)
max(pp$Nobs,na.rm=TRUE)
min(pp$Nobs,na.rm=TRUE)
pp$PP[which(pp$Nobs="NA")]
PP[which(pp$Nobs=="NA")]
pp$PP[which(pp$Nobs=="NA")]
which(pp$Nobs!=4)
which(pp$Nobs=="NA")
which(pp$Nobs=="na")
which(is.character(pp$Nobs))
which(is.na(pp$Nobs))
PP[which(is.na(pp$Nobs))]
pp$PP[which(is.na(pp$Nobs))]
factor(pp$Estacion)
which(is.na(pp$Nobs))
pp[2434]
pp[2434,]
pp[which(is.na(pp$Nobs)),]
pp[which(is.na(pp$PP)),]
pp[which(is.na(pp),]
pp[which(is.na(pp$Codigo),]
pp[which(is.na(pp$Nobs)),]
pp[which(is.na(pp$PP)),]
#c)
#Consulto los datos no disponibles o "Not Available (NA)"
which(is.na(pp))
#c)
#Consulto los datos no disponibles o "Not Available (NA)"
pp[which(is.na(pp))]
#c)
#Consulto los datos no disponibles o "Not Available (NA)"
pp[which(is.na(pp)),]
#c)
#Consulto los datos no disponibles o "Not Available (NA)"
pp[which(is.na(pp$Codigo)),]
#c)
#Consulto los datos no disponibles o "Not Available (NA)"
pp[which(is.na(pp$Estacion)),]
#c)
#Consulto los datos no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),]
#c)
#Consulto los datos no disponibles o "Not Available (NA)"
pp[which(is.na(pp$Nobs)),]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp$Fecha[which(is.na(pp$PP)),]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp$Fecha[which(is.na(pp$PP))]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP))]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),pp$Estacion]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),"Estacion"]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),"Estacion","Fecha"]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),"Estacion"]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),"Estacion":"Fecha"]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),[2]]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
length(pp[which(is.na(pp$PP)),])
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
nrow(pp[which(is.na(pp$PP)),])
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
nrow(pp$Estacion="MAR DEL PLATA AERO"[which(is.na(pp$PP)),])
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
nrow(pp$Estacion[which(is.na(pp$PP)),])
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
nrow(pp$Estacion[which(is.na(pp$PP))])
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp$Estacion[which(is.na(pp$PP))]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[pp$Estacion="MAR DEL PLATA AERO"]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[pp$Estacion=="MAR DEL PLATA AERO"]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),]
#c)
#Consulto los datos de PP no disponibles o "Not Available (NA)"
pp[which(is.na(pp$PP)),]
#d)
dias_pp<-pp$PP[PP>0]
#d)
dias_pp<-pp$PP[pp$PP>0]
dias_pp
is.vector(dias_pp)
#d)
dias_pp<-length(pp$PP[pp$PP>0])
#d)
dias_pp<-length(pp$PP[pp$PP>0]);dias_pp
#d)
dias_pp<-nrow(pp$PP[pp$PP>0]);dias_pp
#d)
dias_pp<-length(pp$PP[pp$PP>0]);dias_pp
#d)
dias_pp<-(pp$PP[pp$PP>0]);dias_pp
legnth(dias_pp)
length(dias_pp)
#d)
dias_pp<-length(pp$PP[pp$PP>0]);dias_pp
pp$Estacion["MAR DEL PLATA AERO"]
pp$Estacion["AEROPARQUE AERO"]
pp[,"Estacion"]
pp[,"Estacion"=="MAR DEL PLATA AERO"]
pp[,"Estacion"=="MAR DEL PLATA AERO"]
mdq<-pp[,"Estacion"=="MAR DEL PLATA AERO"]
mdq
install.packages("tidyverse")
install.packages("metR")
rm(list = ls())
gc()
archivo <- readline(prompt = 'Nombre del archivo .csv')
archivo <- readline(prompt = 'Nombre del archivo .csv')
archivo <- readline(prompt = 'Nombre del archivo .csv')
library(tidyverse)
install.packages("fitdistrplus")
rm(list =ls())
gc()
#----
# Ejercicio 5
setwd("~/obser-hub/Clima_II/tp3/")
df<-read_csv("./LaQuiacaObservatorio.csv")
#----
# Ejercicio 5
setwd("~/obser-hub/Clima_II/tp3/")
library(tidyverse)
df<-read_csv("./LaQuiacaObservatorio.csv")
df%>%mutate(
mes = month(Fecha),
anio = year(Fecha)
)
df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) # Filtro por los meses de invierno
df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio)
df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio)
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio)
View(df_inv)
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>%
summarise(promedio_inv=mean(Tmax, na.rm = TRUE))
View(df_inv)
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>%
summarise(tmax_medio=mean(Tmax, na.rm = TRUE),
tmin_medio=mean(Tmin, na.rm = TRUE))
View(df_inv)
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T))
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T)) %>%
ggplot(aes=(x=tmed_anual))+
geom_density()
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T)) %>%
ggplot(aes(x=tmed_anual))+
geom_density()
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T)) %>%
ggplot(aes(x=tmed_anual))+
geom_density()
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T)) %>%
ggplot(aes(x=anio))+
geom_density()
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T)) %>%
ggplot(aes(x=anio))+
geom_density()
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T)) %>%
ggplot(aes(x=tmed_anual))+
geom_density()
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T)) %>%
ggplot(aes(x=tmed_anual))+
geom_histogram()
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T)) %>%
ggplot(aes(x=tmed_anual))+
geom_histogram()
df_inv<-df%>%
mutate(
mes = month(Fecha),
anio = year(Fecha)) %>% # Separo los meses y anios en columnas distintas
filter(mes %in% c(6,7,8)) %>% # Filtro por los meses de invierno
group_by(anio) %>% # Agrupo por anio
summarise(tmed_anual=mean(tmed, na.rm=T))
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density()
df_inv%>%
ggplot(aes(x=anio))+
geom_density()
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density()
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density()+
labs(title="Función de densidad empírica de la temperatura media anual del invierno")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density()+
labs(
title="Densidad empírica de la temp media anual del invierno")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density()+
labs(
title="Densidad empírica de la temp media anual del invierno",
x="Temp media anual")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density()+
labs(
title="Densidad empírica de la temp media anual del invierno",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color=salmon)+
labs(
title="Densidad empírica de la temp media anual del invierno",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="salmon")+
labs(
title="Densidad empírica de la temp media anual del invierno",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="orange")+
labs(
title="Densidad empírica de la temp media anual del invierno",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="darkgreen")+
labs(
title="Densidad empírica de la temp media anual del invierno",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="darkblue")+
labs(
title="Densidad empírica de la temp media anual del invierno",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="darkblue")+
labs(
title="Densidad empírica de la temp media anual del invierno",
subtitle = "Promedio anual de JJA, desde 1961-2022"
x="Temp media anual",
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="darkblue")+
labs(
title="Densidad empírica de la temp media anual del invierno",
subtitle = "Promedio anual de JJA, desde 1961-2022",
x="Temp media anual",
y="Frecuencia")
#b)
library(fitdistrplus)
descdist(df_inv$tmed_anual)
#c)
mledist(df_inv$tmed_anual,"norm")
#c)
parametros<-mledist(df_inv$tmed_anual,"norm")
View(parametros)
media<-parametros$estimate
media<-parametros$estimate[1]
sd<-parametros$estimate[2]
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="darkblue")+
stat_function(fun = dnorm(mean = media, sd = sd),
color = 'red')+
labs(
title="Densidad empírica de la temp media anual del invierno",
subtitle = "Promedio anual de JJA, desde 1961-2022",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="darkblue")+
stat_function(fun = dnorm,
args = list(mean=media,sd=sd),
color = 'red')+
labs(
title="Densidad empírica de la temp media anual del invierno",
subtitle = "Promedio anual de JJA, desde 1961-2022",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="darkblue")+
stat_function(fun = dnorm,
args = list(mean=media,sd=sd),
color = 'red')+
labs(
title="Densidad empírica vs Teórica",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="Empirica")+
scale_color_manual(name='Referencia',values = c('Empirica'='darkblue','Teorica'='red'))+
stat_function(fun = dnorm,
args = list(mean=media,sd=sd),
color = "Teorica")+
labs(
title="Densidad empírica vs Teórica",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="Empirica")+
stat_function(fun = dnorm,
args = list(mean=media,sd=sd),
color = "Teorica")+
scale_color_manual(name='Referencia',values = c('Empirica'='darkblue','Teorica'='red'))+
labs(
title="Densidad empírica vs Teórica",
x="Temp media anual",
y="Frecuencia")
df_inv%>%
ggplot(aes(x=tmed_anual))+
geom_density(color="darkblue")+
stat_function(fun = dnorm,
args = list(mean=media,sd=sd),
color = 'red')+
labs(
title="Densidad empírica vs Teórica",
x="Temp media anual",
y="Frecuencia")
rm(list =ls())
gc()
getwd()
pp<-read_csv('../tp1/Datos.csv')
View(pp)
pp_aero<-pp%>%
mutate(Estacion,Fecha,PP)
View(pp_aero)
pp_aero<-pp%>%
select_(Estacion,Fecha,PP)
pp_aero<-pp%>%
select_(Estacion,Fecha,PP)
pp_aero<-pp%>%
select(Estacion,Fecha,PP)
pp_aero<-pp%>%
select("Estacion","Fecha","PP")
pp_aero<-pp%>%
select(-Codigo,-Nobs)
pp_aero<-pp%>%
dplyr::select(-Codigo,-Nobs)
View(pp_aero)
pp_aero<-pp%>%
dplyr::select(-Codigo,-Nobs)%>%
filter(Estacion=='AEROPARQUE AERO')
